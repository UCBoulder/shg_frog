name: Auto Tag and Release Multi-OS

on:
  push:
    tags:
      - 'v*' # Only run when version tags pushed (vx.x.x) 

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Important: get full git history + tags
      - name: Setup git credentials for private deps
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Or GITHUB_TOKEN if in same org
        run: |
          git config --global url."https://${GH_TOKEN}@github.com/".insteadOf "https://github.com/"

      - name: Verify git config
        run: git config --list --show-origin | grep github

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'  # Use the version you need

      - name: Install requirements (before build) # Installs from git repos
        run: pip install -r requirements.txt

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ./ 
          pip install pyinstaller

      - name: Build executable with PyInstaller
        run: |
          pyinstaller ./dist/FROGware.spec

      - name: Rename build for platform
        run: |
          OS_NAME=$(echo "${{ runner.os }}" | tr '[:upper:]' '[:lower:]')
          mv dist/FROGware dist/FROGware-${OS_NAME}
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: myapp-${{ runner.os }}
          path: dist/myapp-*
          if-no-files-found: error

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: List downloaded files (debug)
        run: ls -R artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: "Multi-platform release for ${{ github.ref_name }}"
          files: |
            artifacts/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
